@model dynamic
@using Microsoft.AspNet.Identity
@using Shop.EF
@using System.Linq
@{
    ViewBag.Title = "Admin Chat";
    Layout = "~/Areas/Administrator/Views/Shared/_LayoutAdministrator.cshtml";
}

<h2>Admin Chat</h2>

<div class="container-fluid">
    <div class="row">
        <!-- Toggle button for mobile -->
        <button id="toggle-user-list" class="btn btn-primary d-md-none mb-3">
            <i class="bi bi-people-fill"></i>
        </button>
        <!-- User list -->
        <div id="user-list" class="col-md-3 col-12 mb-3">
            <div class="card h-100">
                <div class="card-header bg-primary text-white">
                    <h5 class="mb-0">Danh sách người dùng</h5>
                </div>
                <div class="card-body p-0">
                    <ul id="users" class="list-group list-group-flush">
                        @if (ViewBag.Users != null && ViewBag.Users.Count > 0)
                        {
                            foreach (var user in ViewBag.Users)
                            {
                                if (user != null && !string.IsNullOrEmpty(user.Id) && !string.IsNullOrEmpty(user.UserName))
                                {
                                    <li class="list-group-item d-flex align-items-center @(user.Id == ViewBag.SelectedUserId ? "active" : "")" data-user-id="@user.Id" title="@user.UserName">
                                        <span class="user-avatar bg-primary rounded-circle me-2"></span>
                                        <span class="user-name flex-grow-1">@user.UserName</span>
                                        <span class="user-status offline"></span>
                                    </li>
                                }
                                else
                                {
                                    <li class="list-group-item disabled">Người dùng không hợp lệ</li>
                                }
                            }
                        }
                        else
                        {
                            <li class="list-group-item">Không có người dùng nào.</li>
                        }
                    </ul>
                </div>
            </div>
        </div>
        <!-- Chat area -->
        <div id="chat-area" class="col-md-9 col-12">
            <div class="card h-100">
                <div class="card-body d-flex flex-column">
                    <div id="chat-messages" class="chat-messages flex-grow-1 mb-3 p-3 border rounded">
                        @if (ViewBag.Messages != null && ViewBag.Messages.Count > 0)
                        {
                            foreach (var msg in ViewBag.Messages)
                            {
                                if (msg != null && !string.IsNullOrEmpty(msg.Content))
                                {
                                    <div class="message @(msg.SenderId == User.Identity.GetUserId() ? "sent" : "received") mb-2">
                                        <div class="message-content p-2 rounded">@msg.Content</div>
                                        <small class="message-timestamp text-muted">@msg.Timestamp.ToString("HH:mm")</small>
                                    </div>
                                }
                            }
                        }
                        else
                        {
                            <div class="message received mb-2">
                                <div class="message-content p-2 bg-light rounded">Chọn một người dùng để xem tin nhắn.</div>
                            </div>
                        }
                    </div>
                    <div class="chat-input d-flex">
                        <input type="text" id="message-input" class="form-control me-2" placeholder="Nhập tin nhắn..." />
                        <button id="send-message" class="btn btn-primary" disabled>
                            <i class="bi bi-send"></i> Gửi
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap 5 CSS and JS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.min.js" integrity="sha384-C6RzsynM9kWDrMNeT87bh95OGNyZPhcTNXj1NW7RuBCsyN/o0jlpcV8Qyq46cDfL" crossorigin="anonymous"></script>
<!-- Bootstrap Icons -->
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.1/font/bootstrap-icons.css">

<style>
    .user-avatar {
        width: 30px;
        height: 30px;
    }

    .user-status {
        width: 10px;
        height: 10px;
        border-radius: 50%;
    }

        .user-status.online {
            background: #28a745;
        }

        .user-status.offline {
            background: #dc3545;
        }

    .list-group-item {
        cursor: pointer;
    }

        .list-group-item:hover {
            background: #f8f9fa;
        }

        .list-group-item.active {
            background: #007bff;
            color: white;
            border-color: #007bff;
        }

            .list-group-item.active .user-status {
                background: #fff;
            }

        .list-group-item.disabled {
            color: #6c757d;
            cursor: not-allowed;
            background: #f5f5f5;
        }

    .chat-messages {
        max-height: 400px;
        overflow-y: auto;
        background: #f8f9fa;
        min-height: 400px;
    }

    .message {
        display: flex;
        flex-direction: column;
    }

        .message.sent {
            align-items: flex-end;
        }

        .message.received {
            align-items: flex-start;
        }

    .message-content {
        max-width: 70%;
    }

    .message.sent .message-content {
        background: #007bff;
        color: white;
    }

    .message-timestamp {
        font-size: 0.8em;
        margin-top: 5px;
    }

    .list-group-item.new-message {
        background: #ffeb3b !important;
        transition: background 0.3s ease;
    }

    #user-list {
        transition: max-height 0.3s ease;
    }
</style>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script src="~/Scripts/jquery.signalR-2.4.3.min.js"></script>
<script src="/signalr/hubs"></script>
<script>
    jQuery.noConflict();
    (function ($) {
        $(document).ready(function () {
            console.log("Script AdminChat.cshtml đã tải.");

            if (typeof $ === 'undefined') {
                console.error("jQuery không được tải.");
                alert("Lỗi: jQuery không được tải. Vui lòng kiểm tra kết nối mạng hoặc CDN.");
                return;
            }
            console.log("jQuery version:", $.fn.jquery);
            if (typeof $.connection === 'undefined') {
                console.error("SignalR không được tải. Kiểm tra jquery.signalR-2.4.3.min.js.");
                alert("Lỗi: SignalR không được tải. Vui lòng kiểm tra tệp SignalR.");
                return;
            }

            function waitForHub(callback, attempt = 0, maxAttempts = 50) {
                if ($.connection.chatHub) {
                    console.log("Hub chatHub đã được định nghĩa.");
                    callback($.connection.chatHub);
                } else if (attempt < maxAttempts) {
                    console.log("Đang chờ hub chatHub... (lần thử: " + (attempt + 1) + ")");
                    setTimeout(function () {
                        waitForHub(callback, attempt + 1, maxAttempts);
                    }, 100);
                } else {
                    console.error("Không thể tìm thấy hub chatHub sau " + maxAttempts + " lần thử.");
                    alert("Lỗi: Không thể khởi tạo chat. Vui lòng kiểm tra server SignalR.");
                }
            }

            function moveUserToTop(userId) {
                var $user = $(`#users li[data-user-id="${userId}"]`);
                if ($user.length) {
                    $user.prependTo("#users");
                    console.log(`Người dùng ${userId} đã được di chuyển lên đầu danh sách.`);
                } else {
                    console.warn(`Không tìm thấy người dùng với ID ${userId} trong danh sách. Tải lại danh sách...`);
                    $.get("/Administrator/AdminMessenger/GetUserList", function (data) {
                        if (data && Array.isArray(data)) {
                            $("#users").empty();
                            data.forEach(function (user) {
                                var isActive = user.id === userId ? "active" : "";
                                $("#users").append(
                                    `<li class="list-group-item d-flex align-items-center ${isActive}" data-user-id="${user.id}" title="${user.userName}">
                                        <span class="user-avatar bg-primary rounded-circle me-2"></span>
                                        <span class="user-name flex-grow-1">${user.userName}</span>
                                        <span class="user-status offline"></span>
                                    </li>`
                                );
                            });
                            moveUserToTop(userId);
                        }
                    });
                }
            }

            waitForHub(function (chatHub) {
                var currentUserId = "@User.Identity.GetUserId()";
                console.log("Current User ID:", currentUserId);
                var isSignalRConnected = false;

                chatHub.client.receiveMessage = function (senderName, message, timestamp, isIncoming, senderId) {
                    console.log("Nhận tin nhắn:", { senderName, message, timestamp, isIncoming, senderId });
                    var messageClass = isIncoming ? "received" : "sent";
                    var safeMessage = $('<div/>').text(message).html();
                    var safeTimestamp = $('<div/>').text(new Date(timestamp).toLocaleTimeString()).html();
                    var activeUserId = $("#users li.active").data("user-id");

                    // Hiển thị tin nhắn nếu người gửi là người dùng đang được chọn hoặc là tin nhắn của chính admin
                    if (senderId === activeUserId || senderId === currentUserId) {
                        $("#chat-messages").append(
                            `<div class="message ${messageClass} mb-2">
                                <div class="message-content p-2 rounded">${safeMessage}</div>
                                <small class="message-timestamp text-muted">${safeTimestamp}</small>
                            </div>`
                        );
                        $("#chat-messages").scrollTop($("#chat-messages")[0].scrollHeight);
                    }

                    // Nếu là tin nhắn đến, cập nhật danh sách người dùng
                    if (isIncoming && senderId) {
                        var $user = $(`#users li[data-user-id="${senderId}"]`);
                        $user.addClass("new-message");
                        moveUserToTop(senderId);
                        var audio = new Audio("https://www.soundjay.com/buttons/beep-01a.mp3");
                        audio.play();
                    }
                };

                chatHub.client.showError = function (error) {
                    console.error("Lỗi hub:", error);
                    alert(error);
                };

                chatHub.client.notifyConnected = function (message) {
                    console.log("Kết nối hub:", message);
                };
                function startSignalR() {
                    $.connection.hub.start().done(function () {
                    console.log("Kết nối SignalR thành công, Hub ID:", $.connection.hub.id);
                    isSignalRConnected = true;
                    $("#send-message").prop("disabled", false);
                    updateUserStatus();
                    setInterval(updateUserStatus, 30000); // Cập nhật trạng thái mỗi 30 giây
                    var selectedUserId = "@ViewBag.SelectedUserId";
                    if (selectedUserId) {
                        var $selectedUser = $(`#users li[data-user-id="${selectedUserId}"]`);
                        if ($selectedUser.length) {
                             moveUserToTop(selectedUserId);
                            $selectedUser.click();
                        }
                    }
                    }).fail(function (err) {
                             console.error("Kết nối SignalR thất bại:", err);
                            alert("Không thể kết nối đến server chat. Đang thử lại...");
                            setTimeout(startSignalR, 5000);
                    });
                }

                $.connection.hub.disconnected(function () {
                    console.warn("SignalR ngắt kết nối. Thử kết nối lại...");
                    isSignalRConnected = false;
                    $("#send-message").prop("disabled", true);
                    setTimeout(startSignalR, 5000);
                });

                startSignalR();

                function updateUserStatus() {
                    $.get("/Administrator/AdminMessenger/GetOnlineUsers", function (data) {
                        $("#users li").each(function () {
                            var $this = $(this);
                            var userId = $this.data("user-id");
                            if (userId && data.includes(userId)) {
                                $this.find(".user-status").addClass("online").removeClass("offline");
                            } else {
                                $this.find(".user-status").addClass("offline").removeClass("online");
                            }
                        });
                    }).fail(function (jqXHR, textStatus, errorThrown) {
                        console.error("Lỗi khi lấy danh sách người dùng trực tuyến:", { status: jqXHR.status, textStatus, errorThrown });
                    });
                }

                $("#users li").click(function () {
                    $("#users li").removeClass("active new-message");
                    $(this).addClass("active").removeClass("new-message");
                    var userId = $(this).data("user-id");
                    console.log("Người dùng được chọn:", userId);
                    if (userId) {
                        console.log("Tải tin nhắn cho user:", userId);
                        $.get("/Administrator/AdminMessenger/GetMessages?userId=" + userId, function (data) {
                            console.log("Phản hồi tin nhắn:", data);
                            $("#chat-messages").empty();
                            if (data && Array.isArray(data)) {
                                data.forEach(function (msg) {
                                    var messageClass = msg.senderId === currentUserId ? "sent" : "received";
                                    var safeMessage = $('<div/>').text(msg.content).html();
                                    var safeTimestamp = $('<div/>').text(new Date(msg.timestamp).toLocaleTimeString()).html();
                                    $("#chat-messages").append(
                                        `<div class="message ${messageClass} mb-2">
                                            <div class="message-content p-2 rounded">${safeMessage}</div>
                                            <small class="message-timestamp text-muted">${safeTimestamp}</small>
                                        </div>`
                                    );
                                });
                            } else if (data.error) {
                                console.warn("Lỗi từ API:", data.error);
                                $("#chat-messages").append(
                                    `<div class="message received mb-2">
                                        <div class="message-content p-2 bg-light rounded">${data.error}</div>
                                    </div>`
                                );
                            } else {
                                console.log("Không có tin nhắn cho user:", userId);
                                $("#chat-messages").append(
                                    `<div class="message received mb-2">
                                        <div class="message-content p-2 bg-light rounded">Không có tin nhắn.</div>
                                    </div>`
                                );
                            }
                            $("#chat-messages").scrollTop($("#chat-messages")[0].scrollHeight);
                        }).fail(function (jqXHR, textStatus, errorThrown) {
                            console.error("Tải tin nhắn thất bại:", { status: jqXHR.status, textStatus, errorThrown });
                            $("#chat-messages").empty();
                            $("#chat-messages").append(
                                `<div class="message received mb-2">
                                    <div class="message-content p-2 bg-light rounded">Không thể tải tin nhắn.</div>
                                </div>`
                            );
                        });
                    } else {
                        console.warn("Không có userId được chọn.");
                    }
                });

                $("#send-message").click(function () {
                    if (!isSignalRConnected) {
                        alert("Kết nối chat chưa sẵn sàng. Vui lòng chờ một chút.");
                        return;
                    }

                    var message = $("#message-input").val().trim();
                    if (!message) {
                        alert("Vui lòng nhập tin nhắn.");
                        return;
                    }

                    var userId = $("#users li.active").data("user-id");
                    if (!userId) {
                        alert("Vui lòng chọn người dùng để gửi tin nhắn.");
                        return;
                    }

                    console.log("Gửi tin nhắn:", { userId, message });
                    chatHub.server.sendMessage(userId, currentUserId, message, "@User.Identity.GetUserName()")
                        .done(function () {
                            console.log("Gửi tin nhắn thành công.");
                            $("#message-input").val("");
                        })
                        .fail(function (err) {
                            console.error("Gửi tin nhắn thất bại:", err);
                            alert("Không thể gửi tin nhắn. Vui lòng thử lại sau.");
                        });
                });

                $("#toggle-user-list").click(function () {
                    $("#user-list").toggleClass("active");
                });
            });
        });
    })(jQuery);
</script>